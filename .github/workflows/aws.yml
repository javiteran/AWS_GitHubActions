name: Deploy Flask App to ECS

on:
  push:
    branches: ["main"]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configurar Credenciales AWS
        uses: aws-actions/configure-aws-credentials@v5.0.0
        with:
          aws-region: ${{ secrets.AWS_REGION }}              
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
      - name: 🧪 Test AWS credentials antes de configurar 
        run: |
          echo "Probando credenciales AWS..."
          aws sts get-caller-identity || echo "❌ Error al verificar identidad AWS"
        env:
          aws-region: ${{ secrets.AWS_REGION }}              
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
#################

      - name: Iniciar sesion en Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to ECR. Elastic Container Registry
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "Imagen construida y subida: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Prepare ECS Task Definition
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          IMAGE_TAG: ${{ github.sha }}
          AWS_ACCOUNT_ID: ${{ steps.get-aws-info.outputs.account-id }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SECRET_ARN: ${{ steps.get-aws-info.outputs.secret-arn }}
        run: |
          # Reemplazar placeholders en el archivo de definición de tarea
          sed "s|tu-repositorio-aws/tu-imagen:latest|$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG|g" ecs-task-def.json > ecs-task-def-rendered.json
          sed -i "s|{{AWS_ACCOUNT_ID}}|$AWS_ACCOUNT_ID|g" ecs-task-def-rendered.json
          sed -i "s|{{AWS_REGION}}|$AWS_REGION|g" ecs-task-def-rendered.json
          # Reemplazar el ARN del secreto completo 
          echo $SECRET_ARN
          #arn:aws:secretsmanager
          sed -i "s|arn:aws:secretsmanager|$SECRET_ARN|g" ecs-task-def-rendered.json
          echo "✅ Task definition preparada:" 
          cat ecs-task-def-rendered.json

      - name: Actualizar el servicio ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2.1.1
        with:
          task-definition: ecs-task-def-rendered.json
          #service: ${{ secrets.ECS_SERVICE }}
          cluster: ${{ secrets.ECS_CLUSTER }}
          wait-for-service-stability: true
